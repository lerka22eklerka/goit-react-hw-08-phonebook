{"version":3,"file":"static/js/506.4792f684.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/ContactPerson/ContactPerson.styled.js","components/ContactPerson/ContactPerson.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Section/Section.styled.js","components/Section/Section.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/Contacts.js"],"sourcesContent":["import styled from \"styled-components\";\n\n\nexport const FormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  border-bottom: 1px solid black;\n  padding: 15px;\n  /* padding-left: 40px; */\n`;\n\nexport const Input = styled.input`\n  margin-top: 10px;\n  margin-bottom: 10px;\n  width: 300px;\n  height: 20px;\n`;\n\nexport const LabelStyled = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: 22px;\n  font-weight: 600;\n`;\n\nexport const BtnStyled = styled.button`\n  height: 30px;\n  margin-top: 10px;\n  font-weight: 700;\n  border-radius: 3px;\n  cursor: pointer;\n  transition: 300ms;\n  &:hover {\n    background-color: #ffcc99;\n    color: #ffffff;\n  }\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  BtnStyled,\n  FormStyled,\n  Input,\n  LabelStyled,\n} from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getItems } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport toast from 'react-hot-toast';\n\nexport const ContactForm = () => {\n  const [userName, setUsername] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getItems);\n  const dispatch = useDispatch();\n\n  const handelChange = event => {\n    const { name, value } = event.target;\n    if (name === 'name') {\n      setUsername(value);\n    } else if (name === 'number') {\n      setNumber(value);\n    }\n  };\n  // console.log(contacts);\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(userName);\n    if (\n      contacts.some(contact => {\n        return contact.name.toLowerCase() === userName.toLowerCase();\n      })\n    ) {\n      return toast(userName + ' is already in contacts!');\n    }\n\n    dispatch(addContact({ userName, number }));\n    console.log(userName);\n    setUsername('');\n    setNumber('');\n  };\n\n  return (\n    <FormStyled autoComplete=\"off\" onSubmit={handleSubmit}>\n      <LabelStyled htmlFor=\"name\">\n        Name\n        <Input\n          onChange={handelChange}\n          type=\"text\"\n          name=\"name\"\n          value={userName}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </LabelStyled>\n      <LabelStyled htmlFor=\"number\">\n        Number\n        <Input\n          onChange={handelChange}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?[0-9\\s\\-\\(\\)]+\"\n          title=\"You can enter only numbers, spaces and symbols. For example +380967775533\"\n        />\n      </LabelStyled>\n      <BtnStyled type=\"submit\">Add contact</BtnStyled>\n    </FormStyled>\n  );\n};\n\nContactForm.propTypes = {\n  userName: PropTypes.string,\n  number: PropTypes.string,\n};\n\nexport default ContactForm;\n","import styled from \"styled-components\";\n\nexport const ContactBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n  width: 270px;\n  padding: 5px;\n`;\n\nexport const BtnDelete = styled.button`\n  height: 30px;\n  margin-top: 10px;\n  font-weight: 700;\n  border-radius: 3px;\n  cursor: pointer;\n  transition: 300ms;\n  &:hover {\n    background-color: #ffcc99;\n    color: #ffffff;\n  }\n`;\n\nexport const ContactStyled = styled.p`\n  font-weight: 500;\n  font-size: 22px;\n  margin: 0;\n  min-width: 300px;\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { BtnDelete, ContactBox, ContactStyled } from './ContactPerson.styled';\n\nexport const ContactPerson = contact => {\n  const dispatch = useDispatch();\n  console.log(contact);\n  return (\n    <li>\n      <ContactBox>\n        <ContactStyled>\n          {contact.name}: {contact.phone}\n        </ContactStyled>\n        <BtnDelete onClick={() => dispatch(deleteContact(contact.id))}>\n          Delete\n        </BtnDelete>\n      </ContactBox>\n    </li>\n  );\n};\n\nContactPerson.propTypes = {\n  id: PropTypes.string.isRequired,\n  contacts: PropTypes.shape({\n    userName: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n","import styled from \"styled-components\";\n\nexport const List = styled.ul`\n  padding-left: 20px;\nmargin: 0;\n`;","import { ContactPerson } from 'components/ContactPerson/ContactPerson';\nimport { List } from './ContactList.styled';\nimport { useSelector } from 'react-redux';\nimport { getFilterContacts, getItems } from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const contacts = useSelector(getItems);\n  console.log(contacts);\n  const filterContacts = useSelector(getFilterContacts);\n\n  return (\n    <List>\n      {contacts &&\n        filterContacts.map(contact => (\n          <ContactPerson\n            key={contact.id}\n            id={contact.id}\n            name={contact.name}\n            phone={contact.phone}\n          />\n        ))}\n    </List>\n  );\n};\n\nexport default ContactList;\n","import styled from \"styled-components\";\n\nexport const SectionStyled = styled.section`\n  padding-left: 40px;\n  padding-top: 40px;\n  width: max-content;\n`;\nexport const Title = styled.h2`\n  font-size: 34px;\n  color: #000000;\n  margin-top: 0;\n  margin-bottom: 10px;\n`;","import PropTypes from 'prop-types';\nimport { SectionStyled, Title } from './Section.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionStyled>\n      <Title>{title}</Title>\n      {children}\n    </SectionStyled>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: 10px;\n  font-weight: 700;\n`;\n\nexport const InputStyled = styled.input`\n  margin-top: 10px;\n  margin-bottom: 10px;\n  width: 300px;\n  height: 20px;\n`;\n\n\n","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterContacts } from 'redux/contacts/contactsSlice';\nimport { getFilter } from 'redux/contacts/selectors';\nimport { InputStyled, Label } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  return (\n    <div>\n      <Label htmlFor=\"filter\">Find contacts by name</Label>\n      <InputStyled\n        type=\"text\"\n        id=\"filter\"\n        value={filter}\n        onChange={event => dispatch(filterContacts(event.target.value))}\n      />\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n};\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport ContactList from '../components/ContactList/ContactList';\nimport { Section } from '../components/Section/Section';\nimport { Filter } from '../components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  \n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Section title={'Phonebook'}>\n        <ContactForm />\n      </Section>\n      <Section title={'Contacts'}>\n        <Filter />\n        <Loader />\n        <ContactList />\n      </Section>\n    </>\n  );\n}\n"],"names":["FormStyled","styled","Input","LabelStyled","BtnStyled","useState","userName","setUsername","number","setNumber","contacts","useSelector","getItems","dispatch","useDispatch","handelChange","event","target","name","value","autoComplete","onSubmit","preventDefault","console","log","some","contact","toLowerCase","toast","addContact","htmlFor","onChange","type","pattern","title","required","ContactBox","BtnDelete","ContactStyled","ContactPerson","phone","onClick","deleteContact","id","List","filterContacts","getFilterContacts","map","SectionStyled","Title","Section","children","Label","InputStyled","Filter","filter","getFilter","Contacts","useEffect","fetchContacts","Loader"],"sourceRoot":""}